$padding: 10px;
.all {
  padding: 30px;
  height: 100vh;
  width: 100vw;
  justify-content: space-between;
  background-color: #FAFAFA;
}
.game {
  //flex-grow: 2;
  padding: $padding;
  width: 50vw;
  padding-top: 0;


}
.game-pic {
  height: 300px !important;
  width: 100vw;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  display: flex;
  justify-content: space-between;
  align-items: center;
  //text-align: center;
}
.left {
  display: flex;
  justify-content: space-between;
  width: 500px;
  align-self: center;
}
.right {
  align-self: center;
}
.game-title {
  color: white;
  letter-spacing: 2px;
  margin-left: 220px;
  & h1 {
    font-size: 40px;
  }
}
.btnpos {
  position: absolute;
  right: 80px;
  margin-top: -20px;
  //top: 120px;
}
.btn {
  width: 200px !important;
  height: 45px !important;
  background-color: #0B9AE4;
  color: white;
  font-size: 1.5em;
  letter-spacing: 2px;
}
.logo {
  height: 180px;
  width: 180px;
  padding: 10px;
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  border-radius: 50%;
  border: 3px solid white;
  position: absolute;
  top: 60px;
  left: 20px;
}
.game-descr {
  //padding: $padding;
}
.azure {
  color: #0B9AE4 !important;
  font-size: 1.5em;
  letter-spacing: 1px;
  margin-top: 10px;
}
.leaderboard {
  //flex-grow: 1;
  //position: sticky;
  //top: 500px;
  //margin: $padding;
  width: 500px;
}
$baseColor: #0E2A3B;
$borderRadius: 10px;
$imageBig: 100px;
$imageSmall: 35px;


.capo {
  background-color: #F3F4F5;
  color: black;
  font-size: 1.5em;
  padding: 1rem;
  text-align: center;
  text-transform: uppercase;
}

img {
  border-radius: 50%;
  height: $imageSmall;
  width: $imageSmall;
}

.table-users {
  border-left: #d7d7d7 solid 0.6px;
  border-right: #d7d7d7 solid 0.6px;
  border-bottom: #b9b9b9 solid 0.8px;
  overflow: hidden;
  background-color: white;

  width: 500px;
}
/deep/.mat-tab-group {
  padding: 0 !important;
  display: flex;
  //width: 500px;

}
/deep/.mat-tab-labels {
  display: flex;
  padding: 0 !important;
}
/deep/.mat-tab-label {
  min-width: 60px !important;
  width: 125px !important;
  background-color: #0991d6;
  color: white;
  padding: 0 !important;
  border-right: white solid 0.2px;
  border-left: white solid 0.2px;
  //border-top: white solid 4px;
  //border-bottom: white solid 4px;
  &:first-child {
    border-left: none;
  }
  &:last-child {
    border-right: none;
  }

}
table {
  //width: 400px;

  td, th {
    //color: darken($baseColor, 10%);
    padding: $padding;
  }

  td {
    text-align: center;
    vertical-align: middle;
    //
    //&:last-child {
    //  font-size: 0.95em;
    //  line-height: 1.4;
    //  text-align: left;
    //}
  }

  th {
    //background-color: lighten($baseColor, 50%);
    font-weight: 300;
    width: 145px;
    border-bottom: #e1e1e1 solid 0.3px;
  }

  tr {
    &:nth-child(2n) { background-color: white; }
    //&:nth-child(2n+1) { background-color: lighten($baseColor, 55%) }
  }
}



@media screen and (max-width: 500px) {
  .capo {
    background-color: transparent;
    color: lighten($baseColor, 60%);
    font-size: 2em;
    font-weight: 700;
    padding: 0;
    text-shadow: 2px 2px 0 rgba(0,0,0,0.1);
  }

  img {
    border: 3px solid;
    border-color: lighten($baseColor, 50%);
    height: $imageBig;
    margin: 0.5rem 0;
    width: $imageBig;
  }

  td {
    &:first-child {
      //background-color: lighten($baseColor, 45%);
      border-bottom: 1px solid lighten($baseColor, 30%);
      border-radius: $borderRadius $borderRadius 0 0;
      position: relative;
      top: 0;
      transform: translateY(0);
      width: 100%;
    }

    &:not(:first-child) {
      margin: 0;
      padding: 5px 1em;
      width: 100%;

      &:before {
        font-size: .8em;
        padding-top: 0.3em;
        position: relative;
      }
    }

    &:last-child  { padding-bottom: 1rem !important; }
  }

  tr {
    background-color: white !important;
    border: 1px solid lighten($baseColor, 20%);
    border-radius: $borderRadius;
    box-shadow: 2px 2px 0 rgba(0,0,0,0.1);
    margin: 0.5rem 0;
    padding: 0;
  }

  .table-users {
    border: none;
    box-shadow: none;
    overflow: visible;
  }
}

//this for the barss
.stats {
  text-decoration: none;
  background-color: #424242;
  color: white;
  border-radius: 2px;
  & ul {
    list-style-type: none;
    padding: 10px;
  }
}
/* Styling an indeterminate progress bar */

progress:not(value) {
  /* Add your styles here. As part of this walkthrough we will focus only on determinate progress bars. */
}

/* Styling the determinate progress element */

progress[value] {
  /* Get rid of the default appearance */
  appearance: none;

  /* This unfortunately leaves a trail of border behind in Firefox and Opera. We can remove that by setting the border to none. */
  border: none;

  /* Add dimensions */
  width: 100%; height: 20px;

  /* Although firefox doesn't provide any additional pseudo class to style the progress element container, any style applied here works on the container. */
  background-color: whiteSmoke;
  border-radius: 3px;
  box-shadow: 0 2px 3px rgba(0,0,0,.5) inset;

  /* Of all IE, only IE10 supports progress element that too partially. It only allows to change the background-color of the progress value using the 'color' attribute. */
  color: royalblue;

  position: relative;
  margin: 0 0 1.5em;
}

/*
Webkit browsers provide two pseudo classes that can be use to style HTML5 progress element.
-webkit-progress-bar -> To style the progress element container
-webkit-progress-value -> To style the progress element value.
*/

progress[value]::-webkit-progress-bar {
  background-color: whiteSmoke;
  border-radius: 3px;
  box-shadow: 0 2px 3px rgba(0,0,0,.5) inset;
}

progress[value]::-webkit-progress-value {
  position: relative;

  background-size: 35px 20px, 100% 100%, 100% 100%;
  border-radius:3px;

  /* Let's animate this */
  animation: animate-stripes 5s linear infinite;
}

@keyframes animate-stripes { 100% { background-position: -100px 0; } }

/* Let's spice up things little bit by using pseudo elements. */

progress[value]::-webkit-progress-value:after {
  /* Only webkit/blink browsers understand pseudo elements on pseudo classes. A rare phenomenon! */
  content: '';
  position: absolute;

  width:5px; height:5px;
  top:7px; right:7px;

  background-color: white;
  border-radius: 100%;
}

/* Firefox provides a single pseudo class to style the progress element value and not for container. -moz-progress-bar */

progress[value]::-moz-progress-bar {
  /* Gradient background with Stripes */
  background-image:
    -moz-linear-gradient( 135deg,
      transparent,
      transparent 33%,
      rgba(0,0,0,.1) 33%,
      rgba(0,0,0,.1) 66%,
      transparent 66%),
    -moz-linear-gradient( top,
      rgba(255, 255, 255, .25),
      rgba(0,0,0,.2)),
    -moz-linear-gradient( left, #09c, #f44);

  background-size: 35px 20px, 100% 100%, 100% 100%;
  border-radius:3px;

  /* Firefox doesn't support CSS3 keyframe animations on progress element. Hence, we did not include animate-stripes in this code block */
}

/* Fallback technique styles */
.progress-bar {
  background-color: whiteSmoke;
  border-radius: 3px;
  box-shadow: 0 2px 3px rgba(0,0,0,.5) inset;

  /* Dimensions should be similar to the parent progress element. */
  width: 100%; height:20px;
}

.progress-bar span {
  background-color: royalblue;
  border-radius: 3px;

  display: block;
  text-indent: -9999px;
}

p[data-value] {

  position: relative;
}

/* The percentage will automatically fall in place as soon as we make the width fluid. Now making widths fluid. */

p[data-value]:after {
  content: attr(data-value) '%';
  position: absolute; right:0;
}





.html5::-webkit-progress-value,
.python::-webkit-progress-value  {
  /* Gradient background with Stripes */
  background-image:
    -webkit-linear-gradient( 135deg,
      transparent,
      transparent 33%,
      rgba(0,0,0,.1) 33%,
      rgba(0,0,0,.1) 66%,
      transparent 66%),
    -webkit-linear-gradient( top,
      rgba(255, 255, 255, .25),
      rgba(0,0,0,.2)),
    -webkit-linear-gradient( left, #09c, #f44);
}

.css3::-webkit-progress-value,
.php::-webkit-progress-value
{
  /* Gradient background with Stripes */
  background-image:
    -webkit-linear-gradient( 135deg,
      transparent,
      transparent 33%,
      rgba(0,0,0,.1) 33%,
      rgba(0,0,0,.1) 66%,
      transparent 66%),
    -webkit-linear-gradient( top,
      rgba(255, 255, 255, .25),
      rgba(0,0,0,.2)),
    -webkit-linear-gradient( left, #09c, #ff0);
}

.jquery::-webkit-progress-value,
.node-js::-webkit-progress-value
{
  /* Gradient background with Stripes */
  background-image:
    -webkit-linear-gradient( 135deg,
      transparent,
      transparent 33%,
      rgba(0,0,0,.1) 33%,
      rgba(0,0,0,.1) 66%,
      transparent 66%),
    -webkit-linear-gradient( top,
      rgba(255, 255, 255, .25),
      rgba(0,0,0,.2)),
    -webkit-linear-gradient( left, #09c, #690);
}

/* Similarly, for Mozillaa. Unfortunately combining the styles for different browsers will break every other browser. Hence, we need a separate block. */

.html5::-moz-progress-bar,
.php::-moz-progress-bar {
  /* Gradient background with Stripes */
  background-image:
    -moz-linear-gradient( 135deg,
      transparent,
      transparent 33%,
      rgba(0,0,0,.1) 33%,
      rgba(0,0,0,.1) 66%,
      transparent 66%),
    -moz-linear-gradient( top,
      rgba(255, 255, 255, .25),
      rgba(0,0,0,.2)),
    -moz-linear-gradient( left, #09c, #f44);
}

.css3::-moz-progress-bar,
.php::-moz-progress-bar {
  /* Gradient background with Stripes */
  background-image:
    -moz-linear-gradient( 135deg,
      transparent,
      transparent 33%,
      rgba(0,0,0,.1) 33%,
      rgba(0,0,0,.1) 66%,
      transparent 66%),
    -moz-linear-gradient( top,
      rgba(255, 255, 255, .25),
      rgba(0,0,0,.2)),
    -moz-linear-gradient( left, #09c, #ff0);
}

.jquery::-moz-progress-bar,
.node-js::-moz-progress-bar {
  /* Gradient background with Stripes */
  background-image:
    -moz-linear-gradient( 135deg,
      transparent,
      transparent 33%,
      rgba(0,0,0,.1) 33%,
      rgba(0,0,0,.1) 66%,
      transparent 66%),
    -moz-linear-gradient( top,
      rgba(255, 255, 255, .25),
      rgba(0,0,0,.2)),
    -moz-linear-gradient( left, #09c, #690);
}

/* Now we are good to duplicate html code for other skills and then add the css code for the new skill based on data-skill */


/* THE END */
